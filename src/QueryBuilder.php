<?php

namespace Jgraffite\Snake2camel;

use Illuminate\Database\Query\Builder as Builder;
use Illuminate\Support\Str;

class QueryBuilder extends Builder {

    //@override
    public function get($columns = array('*'))
    {
        for ($n=0;$n<count($columns);$n++) {
            $columns[$n] = (is_string($columns[$n])) ? Str::snake($columns[$n]) : $columns[$n];
        }

        return parent::get($columns); // TODO: Change the autogenerated stub
    }

    public function orderBy($column, $direction = 'asc')
    {
        return parent::orderBy( (is_string($column)) ? Str::snake($column) : $column , $direction); // TODO: Change the autogenerated stub
    }

	public function groupBy( ...$groups ) {
		$newGroups = [];
		foreach ($groups as $column) {
			$newGroups[] = (is_string($column)) ? Str::snake($column) : $column;
		}
		return parent::groupBy( $newGroups ); // TODO: Change the autogenerated stub
	}

    public function where($column, $operator = null, $value = null, $boolean = 'and')
    {
        $column = (is_string($column)) ? Str::snake($column) : $column;
        return parent::where($column, $operator, $value, $boolean); // TODO: Change the autogenerated stub
    }

    public function whereNull($column, $boolean = 'and', $not = false)
    {
        $column = (is_string($column)) ? Str::snake($column) : $column;
        return parent::whereNull($column, $boolean, $not); // TODO: Change the autogenerated stub
    }

    public function whereIn($column, $values, $boolean = 'and', $not = false)
    {
        $column = (is_string($column)) ? Str::snake($column) : $column;
        return parent::whereIn($column, $values, $boolean, $not); // TODO: Change the autogenerated stub
    }

    public function whereBetween($column, iterable $values, $boolean = 'and', $not = false)
    {
        $column = (is_string($column)) ? Str::snake($column) : $column;
        return parent::whereBetween($column, $values, $boolean, $not); // TODO: Change the autogenerated stub
    }


}
